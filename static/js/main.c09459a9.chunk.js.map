{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","remainTime","expirationTime","curretnTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","remaining","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPassword","useRef","form","onSubmit","e","preventDefault","enterdNewPass","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","auth","url","enterdEmail","enerdPassword","email","ok","json","data","Error","exTime","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c09459a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__1GPY4\",\"control\":\"ProfileForm_control__3Iift\",\"action\":\"ProfileForm_action__2H-mt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1tXew\",\"logo\":\"MainNavigation_logo__1n6SK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__GgByp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__2up_t\"};","import React, { useState, useEffect, useCallback } from \"react\";\r\nlet logoutTimer;\r\nconst AuthContext = React.createContext({\r\n  token: null,\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\nconst remainTime = (expirationTime) => {\r\n  const curretnTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  const remaining = adjExpirationTime - curretnTime;\r\n  return remaining;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n  const remainingTime = remainTime(storedExpirationDate);\r\n  if (remainingTime <= 6000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n  const userIsLoggedIn = !!token;\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n    const remaining = remainTime(expirationTime);\r\n    logoutTimer = setTimeout(logoutHandler, remaining);\r\n  };\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthContext;\r\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n  return (\n    <header className={classes.header}>\n      <Link to=\"/Authentication\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/Authentication/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/Authentication/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from \"./ProfileForm.module.css\";\nimport { useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const newPassword = useRef();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enterdNewPass = newPassword.current.value;\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyABCCjwsbFpeydJsX5u-WxfxsfB-EeYI-4\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enterdNewPass,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      history.replace(\"/\");\n    });\n  };\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          minLength=\"7\"\n          ref={newPassword}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enterdEmail = emailInputRef.current.value;\n    const enerdPassword = passwordInputRef.current.value;\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyABCCjwsbFpeydJsX5u-WxfxsfB-EeYI-4\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyABCCjwsbFpeydJsX5u-WxfxsfB-EeYI-4\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enterdEmail,\n        password: enerdPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication Failed!\";\n            // if (data && data.message && data.message.error) {\n            //   errorMessage = data.error.message;\n            // }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const exTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n        authCtx.login(data.idToken, exTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport AuthContext from \"./store/auth-context\";\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/Authentication\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/Authentication/auth\">\n            <AuthPage />\n          </Route>\n        )}\n\n        <Route path=\"/Authentication/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/Authentication/auth\" />}\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/Authentication\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1WAwC\",\"control\":\"AuthForm_control__3bTdY\",\"actions\":\"AuthForm_actions__wyG3H\",\"toggle\":\"AuthForm_toggle__zd8FW\"};"],"sourceRoot":""}